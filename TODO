
## minor issues

queryGDC seems to get an error if -vv passed

## Look at dat/cases/C3L-01069/log.C3L-01069.err
* Be sure empty cases like C3L-01069 run cleanly

* Feature requests:
 * add a field ("result_type"?) which could distinguish between otherwise similar files in cases like RNA-Seq BAMs
of 3 flavors (genomic/chimeric/transcriptome), and Red / Green IDAT files


## Update documentation

## Test summarize_cases.sh
 - look at buccal, peripheral blood, etc.  Add these cases as T, A, etc. 

# overnight run 11/6/19
[ Wed Nov 6 23:19:07 CST 2019 ] Discovery complete
The following 5 files had errors or warnings (top 10 shown):
dat/cases/C3L-01839/log.C3L-01839.err
dat/cases/C3N-01343/log.C3N-01343.err
dat/cases/C3N-01370/log.C3N-01370.err
dat/cases/C3N-01817/log.C3N-01817.err
dat/cases/C3N-03187/log.C3N-03187.err
Timing summary:
Start: Wed Nov 6 14:05:53 CST 2019
End:

Cause is that submitted_reads.dat has size 0 and fails confirm, while test at src/make_AR.sh:422 test for file existence
    (base) [mwyczalk_test@mammoth methylation-dev]$ ls -l dat/cases/C3L-01839/submitted_reads.dat
    -rw-r--r--. 1 mwyczalk_test users 0 Nov  6 16:29 dat/cases/C3L-01839/submitted_reads.dat

Question: why does C3L-01839 get submitted_reads.dat size 0?  Did it error out?

Looks like it errors out:
src/get_submitted_reads.sh: line 203: dat/cases/C3L-01839/read_groups.dat: No such file or directory

This is a situation where we have aliquots, but no read groups associated with them:
```
[ Wed Nov 6 16:29:09 CST 2019 ] Running: bash src/get_read_groups.sh -o dat/cases/C3L-01839/read_groups.dat -v dat/cases/C3L-01839/aliquots.dat
Processing dat/cases/C3L-01839/aliquots.dat
QUERY: { read_group(with_path_to: {type: "aliquot", submitter_id:"CPT0092060009"}, first:10000) { submitter_id library_strategy experiment_name target_capture_kit_target_region } }
RESULT: { "data": { "read_group": [] } }
QUERY: { read_group(with_path_to: {type: "aliquot", submitter_id:"CPT0092060006"}, first:10000) { submitter_id library_strategy experiment_name target_capture_kit_target_region } }
RESULT: { "data": { "read_group": [] } }
QUERY: { read_group(with_path_to: {type: "aliquot", submitter_id:"CPT0093730002"}, first:10000) { submitter_id library_strategy experiment_name target_capture_kit_target_region } }
RESULT: { "data": { "read_group": [] } }
Written to dat/cases/C3L-01839/read_groups.dat
```

C3L-01839 is an unusual case.  Per email from Mathangi 7/3/19, 

    We determined that 5 GBM bases clustered with the normal so we redid one case as we had enough material (C3N-01850) and replaced 4 with new cases.
    To avoid confusion, we would like you to delete/redact the data you have uploaded to the GDC for these cases, so it is clean without any confusion.

    C3N-01850 Keep the latest aliquot (CPT0125270006) 
    C3L-03387 Keep. This is a replacement sample 
    C3L-03390 Keep. This is a replacement sample 
    C3L-03400 Keep. This is a replacement sample 
    C3L-03405 Keep. This is a replacement sample 

    C3N-01850 Delete (CPT0125260008) 
    C3L-01839 Delete
    C3N-01370 Delete
    C3N-01817 Delete
    C3N-03187 Delete

get_submitted_reads should in fact issue error if read_groups does not exist, but exit out correctly if it exists with no data
-> get_read_groups.sh should touch its output file
-> it normally does, but in this case it seems temp file existed but was empty.  

Resolution: get_read_groups.sh will touch output file in all cases

ALSO TODO:
* test to make sure all temp files deleted


## C3N-01343
dat/cases/C3N-01343/log.C3N-01343.err
-> seems to be same error

# run 11/11/19

WARNING: Demographics file ./dat/cases/C3L-00966/demographics.dat for case C3L-00966 does not exist
WARNING: Demographics file ./dat/cases/C3L-00968/demographics.dat for case C3L-00968 does not exist
[ Mon Nov 11 22:20:34 CST 2019 ] Discovery complete
The following 132 files had errors or warnings (top 10 shown):
dat/cases/11LU022/log.11LU022.err
dat/cases/C3L-00004/log.C3L-00004.err
dat/cases/C3L-00006/log.C3L-00006.err
dat/cases/C3L-00010/log.C3L-00010.err
dat/cases/C3L-00017/log.C3L-00017.err
dat/cases/C3L-00094/log.C3L-00094.err
dat/cases/C3L-00096/log.C3L-00096.err
dat/cases/C3L-00102/log.C3L-00102.err
dat/cases/C3L-00103/log.C3L-00103.err
dat/cases/C3L-00104/log.C3L-00104.err
Timing summary: Start: [ Mon Nov 11 13:59:32 CST 2019 ] End: [ Mon Nov 11 22:20:34 CST 2019 ]
(base) [mwyczalk_test@mammoth discover.20191107]$ vi dat/cases/C3L-00004/log.C3L-00004.err

(base) [mwyczalk_test@mammoth discover.20191107]$ grep -i error dat/cases/C3L-00004/log.C3L-00004.err
parse error: Invalid numeric literal at line 1, column 9
Fatal error. Exiting
Fatal error. Exiting
Fatal error. Exiting

The error was during running 
[ Mon Nov 11 14:03:42 CST 2019 ] Running: bash src/get_harmonized_reads.sh -o dat/cases/C3L-00004/harmonized_reads.dat -v dat/cases/C3L-00004/submitted_reads.dat
  Processing dat/cases/C3L-00004/submitted_reads.dat


This seems to be a transiet error.  To try to solve this, we validate JSON in queryGDC:run_query_retry 
